{"version":3,"sources":["webpack:///component---src-pages-projects-tsx-179d7f881b2cd99fa5d7.js","webpack:///./src/components/container.tsx?cd08","webpack:///./src/components/footer.tsx?c10c","webpack:///./src/components/index.tsx","webpack:///./src/components/nav-bar.tsx?8e44","webpack:///./src/pages/projects.tsx"],"names":["webpackJsonp","74","module","exports","__webpack_require__","__importDefault","mod","__esModule","default","Object","defineProperty","value","react_1","Container","props","createElement","className","children","75","Footer","content","href","profileUrl","profileText","198","__export","m","p","hasOwnProperty","52","gatsby_link_1","NavBarItem","to","url","classes","text","NavBar","isDark","role","brandText","brandImg","src","startItems","map","startitem","key","endItems","enditem","204","components_1","Project","name","description","primaryLanguage","isFork","isArchived","Intl","DateTimeFormat","year","month","day","format","Date","parse","updatedAt","_ref","data","githubViewer","bio","repositories","totalCount","title","edges","repoInfo","node","id","avatar","avatarUrl","query"],"mappings":"AAAAA,cAAc,iBAERC,GACA,SAAUC,EAAQC,EAASC,GAEhC,YAEA,IAAIC,GAA4D,SAAUC,GACtE,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAAWF,GAEtDG,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GCVvD,IAAAC,GAAAP,EAAAD,EAAA,GAEaD,GAAAU,UAAY,SAACC,GAAD,MACrBF,GAAAJ,QAAAO,cAAA,OAAKC,UAAU,WACXJ,EAAAJ,QAAAO,cAAA,OAAKC,UAAU,aACVF,EAAMG,YAKnBd,EAAAK,QAAeL,EAAAU,WDSTK,GACA,SAAUhB,EAAQC,EAASC,GAEhC,YAEA,IAAIC,GAA4D,SAAUC,GACtE,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAAWF,GAEtDG,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GE3BvD,IAAAC,GAAAP,EAAAD,EAAA,GASaD,GAAAgB,OAAS,SAACL,GACnB,MACIF,GAAAJ,QAAAO,cAAA,UAAQC,UAAU,UACdJ,EAAAJ,QAAAO,cAAA,OAAKC,UAAU,aACXJ,EAAAJ,QAAAO,cAAA,OAAKC,UAAU,6BACXJ,EAAAJ,QAAAO,cAAA,SACKD,EAAMM,SAEXR,EAAAJ,QAAAO,cAAA,aACIH,EAAAJ,QAAAO,cAAA,yBFYuW,OEZ3UH,EAAAJ,QAAAO,cAAA,KAAGM,KAAMP,EAAMQ,YAAaR,EAAMS,aFYoY,cEZzWX,EAAAJ,QAAAO,cAAA,KAAGM,KAAK,kDAAgD,OAC7I,SAO5BlB,EAAAK,QAAeL,EAAAgB,QFUTK,IACA,SAAUtB,EAAQC,EAASC,GAEhC,YAEA,SAASqB,GAASC,GACd,IAAK,GAAIC,KAAKD,GACLvB,EAAQyB,eAAeD,KAAIxB,EAAQwB,GAAKD,EAAEC,IAGvDlB,OAAOC,eAAeP,EAAS,cAAgBQ,OAAO,IG9CvDc,EAAArB,EAAA,KACAqB,EAAArB,EAAA,KACAqB,EAAArB,EAAA,KACAqB,EAAArB,EAAA,MHmDMyB,GACA,SAAU3B,EAAQC,EAASC,GAEhC,YAEA,IAAIC,GAA4D,SAAUC,GACtE,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAAWF,GAEtDG,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GI9DvD,IAAAC,GAAAP,EAAAD,EAAA,IACA0B,EAAAzB,EAAAD,EAAA,IAgBaD,GAAA4B,WAAa,SAACjB,GACvB,MACIF,GAAAJ,QAAAO,cAACe,EAAAtB,SAAKwB,GAAIlB,EAAMmB,IAAKjB,UAAA,eAA0BF,EAAMoB,SAChDpB,EAAMqB,OAKNhC,EAAAiC,OAAS,SAACtB,GACnB,MACIF,GAAAJ,QAAAO,cAAA,OAAKC,UAAA,wBAAkCF,EAAMuB,OAAS,UAAY,IAAMC,KAAK,cACzE1B,EAAAJ,QAAAO,cAAA,OAAKC,UAAU,aACXJ,EAAAJ,QAAAO,cAAA,OAAKC,UAAU,gBACXJ,EAAAJ,QAAAO,cAACe,EAAAtB,SAAKwB,GAAG,IAAIhB,UAAU,eAEfF,EAAMyB,UAAazB,EAAMyB,UACpBzB,EAAM0B,SAAW5B,EAAAJ,QAAAO,cAAA,OAAK0B,IAAK3B,EAAM0B,WAC9B,SAIpB5B,EAAAJ,QAAAO,cAAA,OAAKC,UAAU,eACXJ,EAAAJ,QAAAO,cAAA,OAAKC,UAAU,gBAEPF,EAAM4B,WAAa5B,EAAM4B,WAAWC,IAAI,SAACC,GAAD,MACpChC,GAAAJ,QAAAO,cAACZ,EAAA4B,YAAWc,IAAA,SAAcD,EAAUT,KAAQF,IAAKW,EAAUX,IAAKE,KAAMS,EAAUT,KAAMD,QAASU,EAAUV,YACzG,MAGZtB,EAAAJ,QAAAO,cAAA,OAAKC,UAAU,cAEPF,EAAMgC,SAAWhC,EAAMgC,SAASH,IAAI,SAACI,GAAD,MAChCnC,GAAAJ,QAAAO,cAACZ,EAAA4B,YAAWc,IAAA,OAAYE,EAAQZ,KAAQF,IAAKc,EAAQd,IAAKE,KAAMY,EAAQZ,KAAMD,QAASa,EAAQb,YAC/F,UAShC/B,EAAAK,QAAeL,EAAAiC,QJoBTY,IACA,SAAU9C,EAAQC,EAASC,GAEhC,YAEA,IAAIC,GAA4D,SAAUC,GACtE,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAAWF,GAEtDG,QAAOC,eAAeP,EAAS,cAAgBQ,OAAO,GKvFvD,IAAAC,GAAAP,EAAAD,EAAA,IACA6C,EAAA7C,EAAA,KAyCM8C,EAAU,SAACpC,GAAD,MACdF,GAAAJ,QAAAO,cAAA,UACEH,EAAAJ,QAAAO,cAAA,UAAIH,EAAAJ,QAAAO,cAAA,KAAGM,KAAMP,EAAMmB,KAAMnB,EAAMqC,OAC/BvC,EAAAJ,QAAAO,cAAA,UAAKD,EAAMsC,aACXxC,EAAAJ,QAAAO,cAAA,UAEID,EAAMuC,gBAAmBzC,EAAAJ,QAAAO,cAAA,QAAMC,UAAU,eAAeF,EAAMuC,gBAAgBF,MAAgB,MAGlGvC,EAAAJ,QAAAO,cAAA,UAEID,EAAMwC,OAAU1C,EAAAJ,QAAAO,cAAA,QAAMC,UAAU,QAAOJ,EAAAJ,QAAAO,cAAA,KAAGC,UAAU,kBAA8B,MAGtFJ,EAAAJ,QAAAO,cAAA,UAEID,EAAMyC,WAAc3C,EAAAJ,QAAAO,cAAA,QAAMC,UAAU,QAAOJ,EAAAJ,QAAAO,cAAA,KAAGC,UAAU,kBAA8B,MAG1FJ,EAAAJ,QAAAO,cAAA,UAAK,GAAIyC,MAAKC,eAAe,SAAWC,KAAM,UAAWC,MAAO,UAAWC,IAAK,YAAaC,OAAOC,KAAKC,MAAMjD,EAAMkD,cAGzH7D,GAAAK,QAAe,SAAAyD,GAA8B,GAA3BC,GAA2BD,EAA3BC,IAChB,OACEtD,GAAAJ,QAAAO,cAAA,WACEH,EAAAJ,QAAAO,cAAA,MAAIC,UAAU,cAAY,YAC1BJ,EAAAJ,QAAAO,cAAA,MAAIC,UAAU,iBAAiBkD,EAAKC,aAAaC,KACjDxD,EAAAJ,QAAAO,cAACkC,EAAApC,UAAS,KACRD,EAAAJ,QAAAO,cAAA,MAAIC,UAAU,cL0BwU,oBK1BzSkD,EAAKC,aAAaE,aAAaC,YAC5E1D,EAAAJ,QAAAO,cAAA,SAAOC,UAAU,SACfJ,EAAAJ,QAAAO,cAAA,aACEH,EAAAJ,QAAAO,cAAA,UACEH,EAAAJ,QAAAO,cAAA,UAAIH,EAAAJ,QAAAO,cAAA,QAAMwD,MAAM,WAAS,YACzB3D,EAAAJ,QAAAO,cAAA,yBACAH,EAAAJ,QAAAO,cAAA,UAAIH,EAAAJ,QAAAO,cAAA,QAAMwD,MAAM,YAAU,SAC1B3D,EAAAJ,QAAAO,cAAA,UAAIH,EAAAJ,QAAAO,cAAA,QAAMwD,MAAM,UAAQ,MACxB3D,EAAAJ,QAAAO,cAAA,UAAIH,EAAAJ,QAAAO,cAAA,QAAMwD,MAAM,YAAU,MAC1B3D,EAAAJ,QAAAO,cAAA,4BAGJH,EAAAJ,QAAAO,cAAA,aACEH,EAAAJ,QAAAO,cAAA,UACEH,EAAAJ,QAAAO,cAAA,UAAIH,EAAAJ,QAAAO,cAAA,QAAMwD,MAAM,WAAS,YACzB3D,EAAAJ,QAAAO,cAAA,yBACAH,EAAAJ,QAAAO,cAAA,UAAIH,EAAAJ,QAAAO,cAAA,QAAMwD,MAAM,YAAU,SAC1B3D,EAAAJ,QAAAO,cAAA,UAAIH,EAAAJ,QAAAO,cAAA,QAAMwD,MAAM,UAAQ,MACxB3D,EAAAJ,QAAAO,cAAA,UAAIH,EAAAJ,QAAAO,cAAA,QAAMwD,MAAM,YAAU,MAC1B3D,EAAAJ,QAAAO,cAAA,4BAGJH,EAAAJ,QAAAO,cAAA,aAEImD,EAAKC,aAAaE,aAAaG,MAAM7B,IAAI,SAAC8B,GAAD,MACvC7D,GAAAJ,QAAAO,cAACmC,GACCL,IAAK4B,EAASC,KAAKC,GACnBC,OAAQV,EAAKC,aAAaU,UAC1BzB,YAAaqB,EAASC,KAAKtB,YAC3BG,WAAYkB,EAASC,KAAKnB,WAC1BD,OAAQmB,EAASC,KAAKpB,OACtBH,KAAMsB,EAASC,KAAKvB,KACpBa,UAAWS,EAASC,KAAKV,UACzB/B,IAAKwC,EAASC,KAAKzC,IACnBoB,gBAAiBoB,EAASC,KAAKrB,yBAWpClD,EAAA2E,MAAA","file":"component---src-pages-projects-tsx-179d7f881b2cd99fa5d7.js","sourcesContent":["webpackJsonp([223733388420870],{\n\n/***/ 74:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n\t    return mod && mod.__esModule ? mod : { \"default\": mod };\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar react_1 = __importDefault(__webpack_require__(2));\n\texports.Container = function (props) {\n\t    return react_1.default.createElement(\"div\", { className: \"section\" }, react_1.default.createElement(\"div\", { className: \"container\" }, props.children));\n\t};\n\texports.default = exports.Container;\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n\t    return mod && mod.__esModule ? mod : { \"default\": mod };\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar react_1 = __importDefault(__webpack_require__(2));\n\texports.Footer = function (props) {\n\t    return react_1.default.createElement(\"footer\", { className: \"footer\" }, react_1.default.createElement(\"div\", { className: \"container\" }, react_1.default.createElement(\"div\", { className: \"content has-text-centered\" }, react_1.default.createElement(\"p\", null, props.content), react_1.default.createElement(\"small\", null, react_1.default.createElement(\"strong\", null, \"Website\"), \" by \", react_1.default.createElement(\"a\", { href: props.profileUrl }, props.profileText), \". License: \", react_1.default.createElement(\"a\", { href: \"http://opensource.org/licenses/mit-license.php\" }, \"MIT\"), \".\"))));\n\t};\n\texports.default = exports.Footer;\n\n/***/ }),\n\n/***/ 198:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction __export(m) {\n\t    for (var p in m) {\n\t        if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t    }\n\t}\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t__export(__webpack_require__(74));\n\t__export(__webpack_require__(75));\n\t__export(__webpack_require__(52));\n\t__export(__webpack_require__(52));\n\n/***/ }),\n\n/***/ 52:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n\t    return mod && mod.__esModule ? mod : { \"default\": mod };\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar react_1 = __importDefault(__webpack_require__(2));\n\tvar gatsby_link_1 = __importDefault(__webpack_require__(65));\n\texports.NavBarItem = function (props) {\n\t    return react_1.default.createElement(gatsby_link_1.default, { to: props.url, className: \"navbar-item \" + props.classes }, props.text);\n\t};\n\texports.NavBar = function (props) {\n\t    return react_1.default.createElement(\"nav\", { className: \"navbar is-fixed-top \" + (props.isDark ? \"is-dark\" : \"\"), role: \"navigation\" }, react_1.default.createElement(\"div\", { className: \"container\" }, react_1.default.createElement(\"div\", { className: \"navbar-brand\" }, react_1.default.createElement(gatsby_link_1.default, { to: \"/\", className: \"navbar-item\" }, props.brandText ? props.brandText : props.brandImg ? react_1.default.createElement(\"img\", { src: props.brandImg }) : 'Home')), react_1.default.createElement(\"div\", { className: \"navbar-menu\" }, react_1.default.createElement(\"div\", { className: \"navbar-start\" }, props.startItems ? props.startItems.map(function (startitem) {\n\t        return react_1.default.createElement(exports.NavBarItem, { key: \"start-\" + startitem.text, url: startitem.url, text: startitem.text, classes: startitem.classes });\n\t    }) : null), react_1.default.createElement(\"div\", { className: \"navbar-end\" }, props.endItems ? props.endItems.map(function (enditem) {\n\t        return react_1.default.createElement(exports.NavBarItem, { key: \"end-\" + enditem.text, url: enditem.url, text: enditem.text, classes: enditem.classes });\n\t    }) : null))));\n\t};\n\texports.default = exports.NavBar;\n\n/***/ }),\n\n/***/ 204:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n\t    return mod && mod.__esModule ? mod : { \"default\": mod };\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar react_1 = __importDefault(__webpack_require__(2));\n\tvar components_1 = __webpack_require__(198);\n\tvar Project = function Project(props) {\n\t    return react_1.default.createElement(\"tr\", null, react_1.default.createElement(\"th\", null, react_1.default.createElement(\"a\", { href: props.url }, props.name)), react_1.default.createElement(\"td\", null, props.description), react_1.default.createElement(\"td\", null, props.primaryLanguage ? react_1.default.createElement(\"span\", { className: \"tag is-info\" }, props.primaryLanguage.name) : null), react_1.default.createElement(\"td\", null, props.isFork ? react_1.default.createElement(\"span\", { className: \"icon\" }, react_1.default.createElement(\"i\", { className: \"fas fa-check\" })) : null), react_1.default.createElement(\"td\", null, props.isArchived ? react_1.default.createElement(\"span\", { className: \"icon\" }, react_1.default.createElement(\"i\", { className: \"fas fa-check\" })) : null), react_1.default.createElement(\"td\", null, new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(Date.parse(props.updatedAt))));\n\t};\n\texports.default = function (_ref) {\n\t    var data = _ref.data;\n\t\n\t    return react_1.default.createElement(\"div\", null, react_1.default.createElement(\"h1\", { className: \"title is-1\" }, \"Projects\"), react_1.default.createElement(\"h2\", { className: \"subtitle is-3\" }, data.githubViewer.bio), react_1.default.createElement(components_1.Container, null, react_1.default.createElement(\"h3\", { className: \"title is-3\" }, \"Active Projects: \", data.githubViewer.repositories.totalCount), react_1.default.createElement(\"table\", { className: \"table\" }, react_1.default.createElement(\"thead\", null, react_1.default.createElement(\"tr\", null, react_1.default.createElement(\"th\", null, react_1.default.createElement(\"abbr\", { title: \"Project\" }, \"Project\")), react_1.default.createElement(\"th\", null, \"Description\"), react_1.default.createElement(\"th\", null, react_1.default.createElement(\"abbr\", { title: \"Language\" }, \"Lang\")), react_1.default.createElement(\"th\", null, react_1.default.createElement(\"abbr\", { title: \"Forked\" }, \"F\")), react_1.default.createElement(\"th\", null, react_1.default.createElement(\"abbr\", { title: \"Archived\" }, \"A\")), react_1.default.createElement(\"th\", null, \"Last Updated\"))), react_1.default.createElement(\"tfoot\", null, react_1.default.createElement(\"tr\", null, react_1.default.createElement(\"th\", null, react_1.default.createElement(\"abbr\", { title: \"Project\" }, \"Project\")), react_1.default.createElement(\"th\", null, \"Description\"), react_1.default.createElement(\"th\", null, react_1.default.createElement(\"abbr\", { title: \"Language\" }, \"Lang\")), react_1.default.createElement(\"th\", null, react_1.default.createElement(\"abbr\", { title: \"Forked\" }, \"F\")), react_1.default.createElement(\"th\", null, react_1.default.createElement(\"abbr\", { title: \"Archived\" }, \"A\")), react_1.default.createElement(\"th\", null, \"Last Updated\"))), react_1.default.createElement(\"tbody\", null, data.githubViewer.repositories.edges.map(function (repoInfo) {\n\t        return react_1.default.createElement(Project, { key: repoInfo.node.id, avatar: data.githubViewer.avatarUrl, description: repoInfo.node.description, isArchived: repoInfo.node.isArchived, isFork: repoInfo.node.isFork, name: repoInfo.node.name, updatedAt: repoInfo.node.updatedAt, url: repoInfo.node.url, primaryLanguage: repoInfo.node.primaryLanguage });\n\t    })))));\n\t};\n\texports.query = \"** extracted graphql fragment **\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-projects-tsx-179d7f881b2cd99fa5d7.js","import React from 'react';\n\nexport const Container = (props: any) => (\n    <div className=\"section\">\n        <div className=\"container\">\n            {props.children}\n        </div>\n    </div>\n);\n\nexport default Container\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/container.tsx","import React from 'react';\nimport Link from 'gatsby-link';\n\nexport interface FooterProps {\n    profileUrl: string;\n    profileText: string;\n    content: any;\n}\n\nexport const Footer = (props: FooterProps) => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <div className=\"content has-text-centered\">\n                    <p>\n                        {props.content}\n                    </p>\n                    <small>\n                        <strong>Website</strong> by <a href={props.profileUrl}>{props.profileText}</a>. License: <a href=\"http://opensource.org/licenses/mit-license.php\">MIT</a>.\n                    </small>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/footer.tsx","export * from './container';\nexport * from './footer';\nexport * from './nav-bar';\nexport * from './nav-bar';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/index.tsx","import React from 'react';\nimport Link from 'gatsby-link';\n\nexport interface NavBarItemProps {\n    text: string;\n    classes?: string;\n    url: string;\n}\n\nexport interface NavBarProps {\n    brandText?: string;\n    brandImg?: string;\n    startItems: NavBarItemProps[];\n    endItems?: NavBarItemProps[];\n    isDark?: boolean;\n}\n\nexport const NavBarItem = (props: NavBarItemProps) => {\n    return (\n        <Link to={props.url} className={`navbar-item ${props.classes}`} >\n            {props.text}\n        </Link>\n    )\n}\n\nexport const NavBar = (props: NavBarProps) => {\n    return (\n        <nav className={`navbar is-fixed-top ${props.isDark ? \"is-dark\" : \"\"}`} role=\"navigation\">\n            <div className=\"container\">\n                <div className=\"navbar-brand\">\n                    <Link to=\"/\" className=\"navbar-item\">\n                        {\n                            props.brandText ? (props.brandText) :\n                                (props.brandImg ? <img src={props.brandImg} /> :\n                                    'Home')\n                        }\n                    </Link>\n                </div>\n                <div className=\"navbar-menu\">\n                    <div className=\"navbar-start\">\n                        {\n                            props.startItems ? props.startItems.map((startitem: NavBarItemProps) =>\n                                <NavBarItem key={`start-${startitem.text}`} url={startitem.url} text={startitem.text} classes={startitem.classes} />\n                            ) : null\n                        }\n                    </div>\n                    <div className=\"navbar-end\">\n                        {\n                            props.endItems ? props.endItems.map((enditem: NavBarItemProps) =>\n                                <NavBarItem key={`end-${enditem.text}`} url={enditem.url} text={enditem.text} classes={enditem.classes} />\n                            ) : null\n                        }\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/nav-bar.tsx","import React from 'react';\nimport { Container } from '../components';\n\n\ninterface RepoQueryResultEdge {\n  node: {\n    id: string;\n    url: string;\n    name: string;\n    description: string;\n    isArchived: boolean;\n    isFork: boolean;\n    updatedAt: string;\n    primaryLanguage: {\n      name: string;\n    }\n  }\n}\ninterface RepoQueryResult {\n  data: {\n    githubViewer: {\n      name: string;\n      bio: string;\n      avatarUrl: string;\n      repositories: {\n        totalCount: number;\n        edges: RepoQueryResultEdge[]\n      }\n    }\n  }\n}\ninterface ProjectProps {\n  url: string;\n  name: string;\n  description: string;\n  isArchived: boolean;\n  isFork: boolean;\n  updatedAt: string;\n  avatar: string;\n  primaryLanguage: any;\n}\n\nconst Project = (props: ProjectProps) =>\n  <tr>\n    <th><a href={props.url}>{props.name}</a></th>\n    <td>{props.description}</td>\n    <td>\n      {\n        props.primaryLanguage ? (<span className=\"tag is-info\">{props.primaryLanguage.name}</span>) : null\n      }\n    </td>\n    <td>\n      {\n        props.isFork ? (<span className=\"icon\"><i className=\"fas fa-check\"></i></span>) : null\n      }\n    </td>\n    <td>\n      {\n        props.isArchived ? (<span className=\"icon\"><i className=\"fas fa-check\"></i></span>) : null\n      }\n    </td>\n    <td>{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(Date.parse(props.updatedAt))}</td>\n  </tr>\n\nexport default ({ data }: RepoQueryResult) => {\n  return (\n    <div>\n      <h1 className=\"title is-1\">Projects</h1>\n      <h2 className=\"subtitle is-3\">{data.githubViewer.bio}</h2>\n      <Container>\n        <h3 className=\"title is-3\">Active Projects: {data.githubViewer.repositories.totalCount}</h3>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th><abbr title=\"Project\">Project</abbr></th>\n              <th>Description</th>\n              <th><abbr title=\"Language\">Lang</abbr></th>\n              <th><abbr title=\"Forked\">F</abbr></th>\n              <th><abbr title=\"Archived\">A</abbr></th>\n              <th>Last Updated</th>\n            </tr>\n          </thead>\n          <tfoot>\n            <tr>\n              <th><abbr title=\"Project\">Project</abbr></th>\n              <th>Description</th>\n              <th><abbr title=\"Language\">Lang</abbr></th>\n              <th><abbr title=\"Forked\">F</abbr></th>\n              <th><abbr title=\"Archived\">A</abbr></th>\n              <th>Last Updated</th>\n            </tr>\n          </tfoot>\n          <tbody>\n            {\n              data.githubViewer.repositories.edges.map((repoInfo: RepoQueryResultEdge) =>\n                <Project\n                  key={repoInfo.node.id}\n                  avatar={data.githubViewer.avatarUrl}\n                  description={repoInfo.node.description}\n                  isArchived={repoInfo.node.isArchived}\n                  isFork={repoInfo.node.isFork}\n                  name={repoInfo.node.name}\n                  updatedAt={repoInfo.node.updatedAt}\n                  url={repoInfo.node.url}\n                  primaryLanguage={repoInfo.node.primaryLanguage}\n                ></Project>)\n            }\n          </tbody>\n        </table>\n      </Container>\n    </div>\n  )\n}\n\n\nexport const query = graphql`\n  query RepoQuery {\n    githubViewer {\n      name\n      bio\n      avatarUrl\n      repositories {\n        totalCount\n        edges {\n          node {\n            id\n            url\n            name\n            description\n            isArchived\n            isFork\n            updatedAt\n            primaryLanguage {\n              name\n            }\n          }\n        }\n      }\n    }\n  }`\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/projects.tsx"],"sourceRoot":""}